{"version":3,"sources":["config/states.js","components/state-selector.js","config/criteria-config.js","config/companies.js","components/company.js","components/company-list.js","components/criteria.js","components/followup.js","App.js","serviceWorker.js","index.js"],"names":["StateSelector","updateState","Autocomplete","id","options","States","style","width","onChange","event","newValue","renderInput","params","TextField","label","variant","criteriaConfig","TYLENOL","name","type","IBUPROFEN","NYQUIL","VICODIN","SIMVASTATIN","LISINOPRIL","LEVOTHYROXINE","HYPERTENSION","HIGH_CHOLESTEROL","TYPE_2_DIABETES","CORONARY_ARTERY_DISEASE","SUBSTANCE_USE_DISORDER","ALCOHOL_USE_DISORDER","COPD","PSYCHOTIC_DISORDER","CROHNS","deniedStates","criteria","Company","company","state","isDenied","includes","some","v","icon","styles","ListItem","alignItems","divider","className","ListItemIcon","ListItemText","primary","Companies","props","List","companies","map","key","Criteria","selectedCriteria","setCriteria","setLastCriteria","multiple","Object","values","getOptionLabel","option","groupBy","autoSelect","value","last","Followup","lastCriteria","criteriaList","probableCriteria","criteriaName","getQuestion","ButtonGroup","color","aria-label","Button","onClick","e","newCriteriaName","undefined","handleUpdate","handleDismiss","App","useState","setState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3d55b54e.chunk.js","sourcesContent":["export default [\n    \"Alabama\",\n    \"Alaska\",\n    \"American Samoa\",\n    \"Arizona\",\n    \"Arkansas\",\n    \"California\",\n    \"Colorado\",\n    \"Connecticut\",\n    \"Delaware\",\n    \"District Of Columbia\",\n    \"Federated States Of Micronesia\",\n    \"Florida\",\n    \"Georgia\",\n    \"Guam\",\n    \"Hawaii\",\n    \"Idaho\",\n    \"Illinois\",\n    \"Indiana\",\n    \"Iowa\",\n    \"Kansas\",\n    \"Kentucky\",\n    \"Louisiana\",\n    \"Maine\",\n    \"Marshall Islands\",\n    \"Maryland\",\n    \"Massachusetts\",\n    \"Michigan\",\n    \"Minnesota\",\n    \"Mississippi\",\n    \"Missouri\",\n    \"Montana\",\n    \"Nebraska\",\n    \"Nevada\",\n    \"New Hampshire\",\n    \"New Jersey\",\n    \"New Mexico\",\n    \"New York\",\n    \"North Carolina\",\n    \"North Dakota\",\n    \"Northern Mariana Islands\",\n    \"Ohio\",\n    \"Oklahoma\",\n    \"Oregon\",\n    \"Palau\",\n    \"Pennsylvania\",\n    \"Puerto Rico\",\n    \"Rhode Island\",\n    \"South Carolina\",\n    \"South Dakota\",\n    \"Tennessee\",\n    \"Texas\",\n    \"Utah\",\n    \"Vermont\",\n    \"Virgin Islands\",\n    \"Virginia\",\n    \"Washington\",\n    \"West Virginia\",\n    \"Wisconsin\",\n    \"Wyoming\"\n]","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport States from '../config/states';\n\nexport default function StateSelector({updateState}){\n    return <Autocomplete\n        id=\"combo-box-demo\"\n        options={States}\n        style={{ width: 300 }}\n        onChange={(event, newValue) => updateState(newValue)}\n        renderInput={(params) => <TextField {...params} label=\"States\" variant=\"outlined\" />}\n    />\n}\n","\nexport const criteriaConfig = {\n    TYLENOL: { name:'Tylenol', type: 'Medication', 'probableCriteria': ['ALCOHOL_USE_DISORDER']},\n    IBUPROFEN: { name:'Ibuprofen', type: 'Medication'},\n    NYQUIL: { name:'Nyquil', type: 'Medication'},\n    VICODIN: { name:'Vicodin', type: 'Medication'},\n    SIMVASTATIN: { name:'Simvastatin', type: 'Medication' },\n    LISINOPRIL: { name:'Lisinopril', type: 'Medication' },\n    LEVOTHYROXINE: { name:'Levothyroxine', type: 'Medication' },\n    HYPERTENSION: { name:'Hypertension', type: 'Condition' },\n    HIGH_CHOLESTEROL: { name:'High Cholesterol', type: 'Condition', 'probableCriteria': ['NYQUIL']},\n    TYPE_2_DIABETES: { name:'Type 2 Diabetes', type: 'Condition' },\n    CORONARY_ARTERY_DISEASE: { name:'Coronary Artery Disease', type: 'Condition', 'probableCriteria': ['SIMVASTATIN']},\n    SUBSTANCE_USE_DISORDER: { name:'Substance Use Disorder', type: 'Condition' },\n    ALCOHOL_USE_DISORDER: { name:'Alcohol Use Disorder', type: 'Condition' },\n    COPD: { name:'Chronic Obstructive Pulmonary Disease (COPD)', type: 'Condition' },\n    PSYCHOTIC_DISORDER: { name:'Psychotic Disorder', type: 'Condition'},\n    CROHNS: { name:'Crohnâ€™s Disease/Ulcerative Colitis', type: 'Condition'}\n}","import {criteriaConfig} from './criteria-config';\nexport default  [\n    {\n        name: 'Wellmark',\n        deniedStates: ['California'],\n        criteria: [criteriaConfig.TYLENOL, criteriaConfig.LEVOTHYROXINE, criteriaConfig.ALCOHOL_USE_DISORDER, criteriaConfig.COPD]\n    },\n    {\n        name: 'UnitedHealth',\n        deniedStates: ['Iowa', 'Indiana'],\n        criteria: [criteriaConfig.NYQUIL, criteriaConfig.IBUPROFEN, criteriaConfig.HIGH_CHOLESTEROL]\n    }\n    ,\n    {\n        name: 'Blue Cross',\n        deniedStates: ['Missouri', \"Illinois\"],\n        criteria: [criteriaConfig.IBUPROFEN, criteriaConfig.VICODIN, criteriaConfig.HIGH_CHOLESTEROL, criteriaConfig.HYPERTENSION, criteriaConfig.TYPE_2_DIABETES]\n    }\n    ,\n    {\n        name: 'Anthem Inc.',\n        deniedStates: ['Alaska', \"Arkansas\"],\n        criteria: [criteriaConfig.TYLENOL, criteriaConfig.TYPE_2_DIABETES]\n    }\n    ,\n    {\n        name: 'Humana',\n        deniedStates: ['Connecticut', 'Vermont'],\n        criteria: [criteriaConfig.TYLENOL, criteriaConfig.COPD, criteriaConfig.CROHNS]\n    }\n    ,\n    {\n        name: 'Highmark Group',\n        deniedStates: ['New York', 'Wisconsin'],\n        criteria: [criteriaConfig.LISINOPRIL, criteriaConfig.PSYCHOTIC_DISORDER, criteriaConfig.SUBSTANCE_USE_DISORDER]\n    }\n    ,\n    {\n        name: 'Cigna Health',\n        deniedStates: ['Idaho', 'Arizona'],\n        criteria: [criteriaConfig.SIMVASTATIN, criteriaConfig.SUBSTANCE_USE_DISORDER, criteriaConfig.COPD, criteriaConfig.CORONARY_ARTERY_DISEASE]\n    }\n]","import React from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nexport default function Company({company, state, criteria}){\n    const isDenied = company.deniedStates.includes(state) || company.criteria.some(v => criteria.includes(v));\n    const icon = isDenied ? <CloseIcon /> : <DoneIcon />\n    const styles = isDenied ? 'red' : ''\n\n    return (\n        <ListItem alignItems=\"flex-start\" divider={true} className={styles}>\n            <ListItemIcon className=\"list-item\">\n                {icon}\n            </ListItemIcon>\n            <ListItemText primary={company.name} />\n        </ListItem>\n    );\n}\n\n        ","import React from 'react';\nimport companies from '../config/companies';\nimport Company from './company';\nimport { List } from '@material-ui/core';\n\nexport default function Companies(props){\n    return(\n        <List>\n            {mapCompanies(companies, props.state, props.criteria)}\n        </List>\n    )\n}\n\nfunction mapCompanies(companies, state, criteria){\n    return companies.map(company => {\n        return <Company key={company.name} company={company} criteria={criteria} state={state} /> \n    })\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {criteriaConfig} from '../config/criteria-config';\nimport last from 'lodash/last'\n\nexport default function Criteria({selectedCriteria, setCriteria, setLastCriteria}){\n    return <Autocomplete multiple\n        id=\"combo-box-demo\"\n        options={Object.values(criteriaConfig)}\n        getOptionLabel={(option) => option.name }\n        groupBy={(option) => option.type}\n        autoSelect={true}\n        value={selectedCriteria}\n        onChange={(event, newValue) => {\n            setCriteria(newValue)\n            setLastCriteria(last(newValue))\n            }}\n        style={{ width: 300 }}\n        renderInput={(params) => <TextField {...params} label=\"Criteria\" variant=\"outlined\" />}\n    />\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport {criteriaConfig} from '../config/criteria-config';\n\nexport default function Followup({lastCriteria, setLastCriteria, criteriaList, setCriteria}){\n    if(!lastCriteria.probableCriteria) return <div></div>  \n  \n    return (\n        <div className=\"followup\">\n            <h2>{getQuestion(lastCriteria)}</h2>\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n                <Button onClick={(e) => handleUpdate(lastCriteria.probableCriteria[0], criteriaList, setCriteria, setLastCriteria)}>Yes</Button>\n                <Button onClick={(e) => handleDismiss(setLastCriteria)}>No</Button>\n            </ButtonGroup>\n        </div> \n    )\n}\n\nfunction handleUpdate(newCriteriaName, criteriaList, setCriteria, setLastCriteria){\n    setCriteria([...criteriaList, criteriaConfig[newCriteriaName]])\n    setLastCriteria(undefined)\n}\n\nfunction handleDismiss(setLastCriteria) {\n    setLastCriteria(undefined)\n}\n\nfunction getQuestion(lastCriteria){\n    const criteriaName =  criteriaConfig[lastCriteria.probableCriteria].name\n    if(lastCriteria.type === \"Medication\"){\n        return `Does the user have ${criteriaName}?`\n    }\n    \n    return `Does the user take ${criteriaName}?`\n}","import React, {useState} from 'react';\nimport './App.css';\nimport StateSelector from './components/state-selector';\nimport Companies from './components/company-list';\nimport Criteria from './components/criteria';\nimport Followup from './components/followup';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nfunction App() {\n  const [state, setState] = useState('');\n  const [criteria, setCriteria] = useState([]); \n  const [lastCriteria, setLastCriteria] = useState();\n\n  return (\n    <div className=\"App\">\n      <div className=\"options\">\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={[\"0-18 yrs\", \"19-25 yrs\", \"25-35 yrs\", \"35-40 yrs\", \"40-50 yrs\", \"50+ yrs\"]}\n          style={{ width: 300 }}\n          renderInput={(params) => <TextField {...params} label=\"Age\" variant=\"outlined\" />}\n        />\n        <StateSelector updateState={setState} />\n        <Criteria selectedCriteria={criteria} setCriteria={setCriteria} setLastCriteria={setLastCriteria} />\n      </div>\n        {lastCriteria ? <Followup lastCriteria={lastCriteria} setLastCriteria={setLastCriteria} criteriaList={criteria} setCriteria={setCriteria} /> : undefined }\n        <hr />\n      <Companies state={state} criteria={criteria} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}